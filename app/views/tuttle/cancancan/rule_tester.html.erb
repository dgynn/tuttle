<h1>CanCanCan</h1>

<ul class="nav nav-tabs" role="tablist">
  <li><a href="<%= cancancan_path %>" role="tab">Overview</a></li>
  <li><a href="<%= cancancan_path %>#rules" role="tab">Rules</a></li>
  <li class="active"><a href="#" role="tab">Rule Tester</a></li>
</ul>
<br/>

<form class="form-horizontal" role="form" metho="get">
  <div class="form-group">
    <label for="action_name" class="col-sm-2 control-label">Action</label>
    <div class="col-sm-10">
      <input type="text" class="form-control typeahead" name="action_name" id="action_name" value="<%= @action %>">
    </div>
  </div>
  <div class="form-group">
    <label for="subject_class" class="col-sm-2 control-label">Subject Class</label>
    <div class="col-sm-10">
      <%= select_tag('subject_class',options_for_select(@models.collect(&:name).sort, params[:subject_class]),:include_blank=>true, :class => 'form-control') %>
    </div>
  </div>
  <div class="form-group">
    <label for="subject_id" class="col-sm-2 control-label">Subject ID</label>
    <div class="col-sm-10">
      <input type="text" class="form-control" name="subject_id" value="<%= @subject.try(:id) || params[:subject_id] %>">
    </div>
  </div>
  <div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
      <button type="submit" class="btn btn-default">Test</button>
    </div>
  </div>
</form>

<% if @action && @subject %>
    <p>
    <%= "User.can?(:#{@action}, #{@subject.class.name}.find(#{@subject.id}) ) = #{@ability.can?(@action, @subject)}" if @subject.id %>
    <%= "User.can?(:#{@action}, #{@subject.class.name}.new() ) = #{@ability.can?(@action, @subject)}" unless @subject.id %>
    </p>
<% end %>

<%- relevant_rules = @ability.send(:relevant_rules_for_match, @action.to_sym, @subject) -%>

<h3>Relevant Rules</h3>
<%= render :partial => 'rule_table', :locals => {:rules => relevant_rules } =%>

<h3>All Rules</h3>
<%= render :partial => 'rule_table', :locals => {:rules => @ability.instance_variable_get('@rules') } =%>

<%- action_list = @ability.instance_variable_get('@rules').collect(&:actions).flatten.uniq -%>

<%- content_for(:javascripts) do -%>
<script>
var action_name_list = <%= action_list.as_json.to_s.html_safe =%>;
var action_names = new Bloodhound({
  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
  queryTokenizer: Bloodhound.tokenizers.whitespace,
  local: $.map(action_name_list, function(name) { return { value: name }; })
});

action_names.initialize();

$('#action_name.typeahead').typeahead({ hint: true, highlight: true, minLength: 1},
  { name: 'action_names', displayKey: 'value', source: action_names.ttAdapter()
});
</script>
<%- end -%>
