<h1>
  Caching <%= truth_label(ActionController::Base.send(:cache_configured?), 'Enabled', 'Disabled') %>
</h1>

<p>
  For an in-depth overview of Rails Caching, see the
  <a href="<%= rails_guides_versioned_url('caching_with_rails.html') %>">Caching with Rails</a> guide.
</p>

<h2>Configuration</h2>
<p>Rails needs to have caching enabled <em>and</em> a specific cache implementation configured.</p>

<table class="table table-condensed not-wide">
  <tr>
    <th>Setting</th>
    <th>Value</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>config.action_controller.perform_caching</td>
    <td><%= truth_label(Rails.application.config.action_controller.perform_caching) %></td>
    <td>
      Configures whether the application should perform caching or not.
      Typically set to false in development mode, true in production.
    </td>
  </tr>
  <tr>
    <td>config.cache_store</td>
    <td><code><%= Rails.application.config.cache_store.inspect %></code></td>
    <td>
      Configuration parameters that will be used to initialize the cache store.
    </td>
  </tr>
  <tr>
    <td>ENV['RAILS_CACHE_ID']</td>
    <td><code><%= ENV['RAILS_CACHE_ID'].inspect %></code></td>
    <td>Used to generate expanded cache keys in Rails' caching code if present</td>
  </tr>
  <tr>
    <td>ENV['RAILS_APP_VERSION']</td>
    <td><code><%= ENV['RAILS_APP_VERSION'].inspect %></code></td>
    <td>Used to generate expanded cache keys in Rails' caching code if present</td>
  </tr>
  <% if ActionMailer::Base.respond_to?(:perform_caching=) %>
    <tr>
      <td>config.action_mailer.perform_caching</td>
      <td><%= truth_label(Rails.application.config.action_mailer.perform_caching) %></td>
      <td></td>
    </tr>
  <% end %>
</table>

<% if Rails.application.config.action_controller.perform_caching %>
  <h2>Cache Details</h2>
  <p>
    Rails.cache class = <code><%= @cache.class %></code><br />
  </p>
  <p>
    Rails.cache options = <code><%= @cache.options.inspect %></code>
  </p>
  <p>Rails.cache standard options:<br />
  <%- ActiveSupport::Cache::UNIVERSAL_OPTIONS.each do |option| %>
      &nbsp;&nbsp;<code><%= option.inspect %> =&gt; <%= @cache.options[option].inspect %></code><br />
  <%- end %>
  </p>

  <%-
    # Page and action caching were removed from Rails and made available in a separate gem
    #  https://github.com/rails/actionpack-page_caching
    #  https://github.com/rails/actionpack-action_caching
    # Page caching available? <%= !!defined?(ActionController::Caching::Pages)
    # Action caching available? <%= !!defined?(ActionController::Caching::Actions)
  -%>

  <%- if @cache.is_a?(ActiveSupport::Cache::MemoryStore) %>
    <%= render partial: 'cache_memory_store' %>
  <%- elsif @cache.is_a?(ActiveSupport::Cache::MemCacheStore) ||
            defined?(::ActiveSupport::Cache::DalliStore) && @cache.is_a?(ActiveSupport::Cache::DalliStore) %>
    <%= render partial: 'cache_dalli_store' %>
  <%- elsif @cache.is_a?(ActiveSupport::Cache::FileStore) %>
    <p>
      Rails FileStore options<br />
      &nbsp;&nbsp;<code>:cache_path =&gt; <%= @cache.cache_path %></code>
    </p>
  <%- elsif @cache.is_a?(ActiveSupport::Cache::NullStore) %>
    <p>
      NullStore has no configuration options
    </p>
  <%- else %>
    <p>
      Unknown cache store.
    </p>
  <%- end %>

  <% # DISABLED render partial: 'cache_monitor' %>

<% else %>
  <p>
    Rails is not configured to perform caching in this environment.
    You will need to set <code>config.action_controller.perform_caching = true</code> to enable caching.
  </p>
<% end %>
