<h2>Process and Memory</h2>
<% if defined?(GetProcessMem) %>
GetProcessMem Version: <%= GetProcessMem::VERSION %>
<% end %>

<h3>Ruby Process Information</h3>
<table class="table table-condensed not-wide">
  <tr>
    <th>PID</th>
    <td><%= Process.pid %></td>
  </tr>
  <tr>
    <th>Parent PPID</th>
    <td><%= Process.ppid %></td>
  </tr>
  <tr>
    <th>Process EGID</th>
    <td><%= Process.egid %></td>
  </tr>
  <tr>
    <th>Process EUID</th>
    <td><%= Process.euid %></td>
  </tr>
  <tr>
    <th>Process pgrp</th>
    <td><%= Process.getpgrp %></td>
  </tr>
  <tr>
    <th>Process rlimit(Process::RLIMIT_CORE)</th>
    <td><%= Process.getrlimit(Process::RLIMIT_CORE) %></td>
  </tr>
  <tr>
    <th>Process rlimit(Process::RLIMIT_MEMLOCK)</th>
    <td><%= Process.getrlimit(Process::RLIMIT_MEMLOCK) %></td>
  </tr>
  <tr>
    <th>Process getsid</th>
    <td><%= Process.getsid %></td>
  </tr>
  <tr>
    <th>Process gid</th>
    <td><%= Process.gid %></td>
  </tr>
  <tr>
    <th>Process groups</th>
    <td><%= Process.groups %></td>
  </tr>
  <tr>
    <th>Process maxgroups</th>
    <td><%= Process.maxgroups %></td>
  </tr>
</table>


<% if @memory_self %>
  <h3>GetProcessMem</h3>
  <table class="table table-condensed not-wide">
    <tr>
      <th>Linux?</th>
      <td><%= truth_label(@memory_self.linux?) %></td>
    </tr>
    <tr>
      <th>PID bytes</th>
      <td><%= ActiveSupport::NumberHelper.number_to_human_size(@memory_self.bytes.to_i) %></td>
    </tr>
    <tr>
      <th>PID ps_memory</th>
      <td><%= ActiveSupport::NumberHelper.number_to_human_size(@memory_self.send(:ps_memory).to_i) %></td>
    </tr>
    <% if @memory_self.respond_to?(:linux_status_memory) %>
      <tr>
        <th>PID status_memory</th>
        <td><%= @memory_self.linux_status_memory > 0 ? ActiveSupport::NumberHelper.number_to_human_size(@memory_self.linux_status_memory.to_i) : '--Unknown--' %></td>
      </tr>
    <% end %>
    <tr>
      <th>PPID bytes</th>
      <td><%= ActiveSupport::NumberHelper.number_to_human_size(@memory_parent.bytes.to_i) %></td>
    </tr>
    <tr>
      <th>PPID ps_memory</th>
      <td><%= ActiveSupport::NumberHelper.number_to_human_size(@memory_parent.send(:ps_memory).to_i) %></td>
    </tr>
    <% if @memory_parent.respond_to?(:linux_status_memory) %>
      <tr>
        <th>PPID status_memory</th>
        <td><%= @memory_parent.linux_status_memory > 0 ? ActiveSupport::NumberHelper.number_to_human_size(@memory_parent.linux_status_memory.to_i) : '--Unknown--' %></td>
      </tr>
    <% end %>
  </table>

<% end %>
