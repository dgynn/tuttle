<h1>Internationalization</h1>

<p>
  Rails Internationalization (I18n) configuration is described in the Rails
  Guide for the <%= link_to_rails_guide('i18n', 'Rails Internationalization API') %>.
</p>

<dl class="dl-horizontal">
  <dt>I18n Version</dt><dd><%= I18n::VERSION %></dd>
</dl>

<h3>Config Settings</h3>
<table class="table table-condensed">
  <tr>
    <th>Setting</th>
    <th>Config</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>I18n.default_locale</td>
    <td><code><%= I18n.default_locale.inspect %></code></td>
    <td>Default locale</td>
  </tr>
  <tr>
    <td>I18n.default_separator</td>
    <td><code><%= I18n.default_separator.inspect %></code></td>
    <td>Default separator (should be <code>.</code>)</td>
  </tr>
  <tr>
    <td>I18n.exception_handler</td>
    <td><code><%= I18n.exception_handler.class.inspect %></code></td>
    <td>Exception handler (class)</td>
  </tr>
  <tr>
    <td>I18n.backend</td>
    <td><code><%= I18n.backend.class.inspect %></code></td>
    <td>Backend (class)</td>
  </tr>
  <tr>
    <td>I18n.available_locales</td>
    <td><code><%= I18n.available_locales %></code></td>
    <td>Available locales</td>
  </tr>
  <tr>
    <td>I18n.enforce_available_locales</td>
    <td><%= truth_label(I18n.enforce_available_locales) %></td>
    <td>Enforce available locales</td>
  </tr>
  <tr>
    <td>I18n::Locale::Tag.implementation</td>
    <td><%= I18n::Locale::Tag.implementation %></td>
    <td>Locale format support for fallbacks</td>
  </tr>
</table>

<h3>i18n Extensions</h3>
<h4>Fallbacks <%= truth_label(I18n.respond_to?(:fallbacks), "enabled", "not enabled") %></h4>
<% if I18n.respond_to?(:fallbacks) %>
  <table class="table table table-condensed">
    <% I18n.fallbacks.each do |k, v| %>
      <tr>
        <td><code><%= k.inspect %></code></td>
        <td><code><%= v.inspect %></code></td>
      </tr>
    <% end %>
  </table>
<% end %>
<h4>Pluralization <%= truth_label(I18n.backend.class < I18n::Backend::Pluralization, "enabled", "not enabled") %></h4>
<h4>Cache <%= truth_label(I18n.respond_to?(:cache_store), "enabled", "not enabled") %></h4>
<h4>GetText <%= truth_label(I18n.backend.class < I18n::Backend::Gettext, "enabled", "not enabled") %></h4>

<% config_paths = Rails.application.config.i18n.load_path.map(&:to_s) %>
<h3>I18n load path <span class="badge"><%= I18n.load_path.size %> files</span></h3>
<table class="table table table-condensed">
  <tr>
    <th>Path</th>
    <th>Configured</th>
    <th>Exists</th>
    <th>File Size</th>
  </tr>
  <% I18n.load_path.each do |path_location| %>
    <tr>
      <td class="text-nowrap">
        <%= display_path(path_location) %>
      </td>
      <td><%= truth_label(config_paths.include?(path_location)) %></td>
      <td><%= truth_label(File.exist?(path_location)) %></td>
      <td><%= File.size(path_location) %></td>
    </tr>
  <% end %>
</table>
